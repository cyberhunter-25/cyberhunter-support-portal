version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: cyberhunter_portal
      POSTGRES_USER: cyberhunter_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cyberhunter_user -d cyberhunter_portal"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask Application
  web:
    build: .
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://cyberhunter_user:${DB_PASSWORD:-changeme}@postgres:5432/cyberhunter_portal
      REDIS_URL: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/0
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/1
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/2
      FLASK_SECRET_KEY: ${FLASK_SECRET_KEY}
      MICROSOFT_CLIENT_ID: ${MICROSOFT_CLIENT_ID}
      MICROSOFT_CLIENT_SECRET: ${MICROSOFT_CLIENT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      IMAP_USERNAME: ${IMAP_USERNAME}
      IMAP_PASSWORD: ${IMAP_PASSWORD}
      DOMAIN_NAME: ${DOMAIN_NAME}
    volumes:
      - uploads:/var/www/cyberhunter-portal/uploads
      - logs:/var/log/cyberhunter-portal
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery:
    build: .
    command: celery -A app.celery worker --loglevel=info
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://cyberhunter_user:${DB_PASSWORD:-changeme}@postgres:5432/cyberhunter_portal
      REDIS_URL: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/0
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/1
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/2
    volumes:
      - uploads:/var/www/cyberhunter-portal/uploads
      - logs:/var/log/cyberhunter-portal
    depends_on:
      - postgres
      - redis

  # Celery Beat (Scheduler)
  celery-beat:
    build: .
    command: celery -A app.celery beat --loglevel=info
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://cyberhunter_user:${DB_PASSWORD:-changeme}@postgres:5432/cyberhunter_portal
      REDIS_URL: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/0
      CELERY_BROKER_URL: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/1
      CELERY_RESULT_BACKEND: redis://:${REDIS_PASSWORD:-changeme}@redis:6379/2
    depends_on:
      - postgres
      - redis

volumes:
  postgres_data:
  redis_data:
  uploads:
  logs: